-- detect os version
function read_os_version()
  local lines = {}
  local os_id="opensuse"
  local os_version=0
  for line in io.lines(loader.path.combine(tunables.chrootdir,"etc","os-release")) do
    lines[#lines + 1] = line
  end
  for _,line_val in pairs(lines) do
    if string.match(line_val,'VERSION_ID="%d+%.*%d*"') ~= nil then
      os_version=tonumber(string.match(line_val,'%d+%.*%d*'))
    elseif string.match(line_val,'ID=%w+') ~= nil then
      _,os_id=string.match(line_val,'(ID=)(%w+)')
    end
  end
  return os_id, os_version
end

os_id,os_version=read_os_version()
assert(type(os_id)=="string", "failed to parse os id from etc/os_release file")
assert(type(os_version)=="number", "failed to parse os version from etc/os_release file")

-- detect debian arch (arch label file created by chroot download script)
function read_os_arch()
  local arch_label_file = io.open(loader.path.combine(tunables.chrootdir,"arch-label"), "r")
  local arch_label="amd64"
  if arch_label_file then
    arch_label = arch_label_file:read()
    arch_label_file:close()
  end
  return arch_label
end
os_arch=read_os_arch()
