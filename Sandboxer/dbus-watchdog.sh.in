#!/bin/bash

#we are forked from main script, set this service variable to default state
lock_entered="false"

#initial sleep
sleep 10

function check_dbus_session() {
 test `ls -1 "$basedir/control" | grep -E "(^.*\.in\$)|(^.*\.out\$)" | grep -vE "(^dbus.in\$)|(^dbus.out\$)|(^control.in\$)|(^control.out\$)" | wc -l` != "0" && return 0
 return 1
}

function wait_for_dbus_exit() {
 local dbus_wait=400
 while check_dbus_session
 do
  if [ $dbus_wait -lt 1 ]; then
   log "timeout while waiting for dbus session termination"
   break
  fi
  sleep 0.025
  dbus_wait=$((dbus_wait-1))
 done
}

while true
do

#check, that there are slave sessions active other than dbus session
if check_dbus_session; then
 #sleep and continue, if true
 sleep 5
 continue
fi

#enter lock
lock_enter

#check, that there are slave sessions active other than dbus session
if check_dbus_session; then
 #exit lock and continue, if true
 lock_exit
 sleep 5
 continue
fi

#check, that there are any orphans running (services started by dbus should not became orphans)
o_count=""
o_count=`2>/dev/null "$commander" "$basedir/control" "control" "${cfg[sandbox.setup.security_key]}" 250`
test -z "$o_count" && log "error getting orphans count!" && teardown 1

#exit lock, sleep and continue if true
if [ "$o_count" != "0" ]; then
 lock_exit
 sleep 5
 continue
fi

log "requesting dbus session to grace exit"
#request dbus session to gracefully terminate
"$commander" "$basedir/control" "dbus" "${cfg[sandbox.setup.security_key]}" 253 1
check_errors "failed to send command to dbus session, dbus-watchdog will now exit"

#wait some time while dbus session is terminated
wait_for_dbus_exit

#check, if dbus session still running
if check_dbus_session; then
 log "requesting dbus session to force quit"
 #request dbus session to force quit
 "$commander" "$basedir/control" "dbus" "${cfg[sandbox.setup.security_key]}" 253 0
 check_errors "failed to send command to dbus session, dbus-watchdog will now exit"
 #wait some time while dbus session is force terminating
 wait_for_dbus_exit
fi

#check, if there are any orphans left
o_count=""
o_count=`2>/dev/null "$commander" "$basedir/control" "control" "${cfg[sandbox.setup.security_key]}" 250`
test -z "$o_count" && log "error getting orphans count!" && teardown 1

#request commander to force terminate if so
if [ "$o_count" != "0" ]; then
 log "requesting control session to terminate"
 "$commander" "$basedir/control" "control" "${cfg[sandbox.setup.security_key]}" 253 0
 #wait while commander if shuting down
 comm_wait=400
 while [ `ls -1 "$basedir/control" | grep -E "(^.*\.in\$)|(^.*\.out\$)" | wc -l` != "0" ]
 do
  if [ $comm_wait -lt 1 ]; then
   log "timeout while waiting for control session terminate"
   break
  fi
  sleep 0.025
  comm_wait=$((comm_wait-1))
 done
fi

#exit lock
lock_exit

exit 0

done

