#!/bin/bash

fixups_srcdir="$script_dir/fixups"

fixups_srcdir_extra="$script_dir/../Build/fixups"
test ! -d "$fixups_srcdir_extra" && fixups_srcdir_extra=""

if [ ! -z "$fixups_srcdir" ]; then
  fixups_srcdir=`realpath "$fixups_srcdir"`
  # construct directory, that will be mounted
  rm -rf "${cfg[defaults.features.fixups_dir]}"
  check_errors
  mkdir "${cfg[defaults.features.fixups_dir]}"
  check_errors
  # populate with main directory contents
  cp -rf "$fixups_srcdir"/* "${cfg[defaults.features.fixups_dir]}"
  check_errors
  # populate with extra directory contents
  if [ ! -z "$fixups_srcdir_extra" ]; then
    for extra_dir in "$fixups_srcdir_extra"/*
    do
      test -z "$extra_dir" -o ! -d "$extra_dir" && continue
      cp -rf "$extra_dir" "${cfg[defaults.features.fixups_dir]}"
      check_errors
    done
  fi
  # populate with downloaded prebuilt fakeroot packages for different distributions
  for fakeroot_dir in "$HOME/.cache/sandboxer"/fakeroot*
  do
    test -z "$fakeroot_dir" -o ! -d "$fakeroot_dir" && continue
    cp -rf "$fakeroot_dir" "${cfg[defaults.features.fixups_dir]}"
    check_errors
  done
  # add mounts entries for fixups directory
  bwrap_add_param "--ro-bind"
  bwrap_add_param "${cfg[defaults.features.fixups_dir]}"
  bwrap_add_param "/fixups"
else
  log "fixups directory not found, skipping feature activation"
fi

unset fixups_srcdir fixups_srcdir_extra
